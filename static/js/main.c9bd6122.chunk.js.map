{"version":3,"sources":["images/card1.png","images/card2.png","images/card3.png","images/card4.png","images/card5.png","images/card6.png","images/card7.png","images/card8.png","images/card9.png","images/cover.png","components/Layout/Layout.styles.js","components/Layout/Layout.js","components/Game/Game.styles.js","components/Game/Game.js","components/Home/Home.styles.js","components/Home/Home.js","data/cards.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Header","Main","Layout","children","Button","button","props","level","GridCards","Card","ImgBack","img","disableImages","Game","onStartGame","onChangeLevel","shuffledCards","cardImage","onSelectedCard","onClick","map","value","idx","front","src","name","alt","data-aos","backCard","Title","p","ContainerButtons","ButtonLevel","Home","gameOver","setDifficulty","difficulty","cards","solved","App","useState","play","setPlay","setDisableImages","setShuffledCards","setGameOver","selectedCards","setSelectedCards","useEffect","AOS","init","duration","window","addEventListener","refresh","length","tempCards","firstCard","secondCard","setTimeout","undefined","find","element","cardByDifficulty","slice","i","j","Math","floor","random","shufflingCards","imageCard1","imageCard2","imageCard3","imageCard4","imageCard5","imageCard6","imageCard7","imageCard8","imageCard9","prevValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9bd6122.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/card1.7f41aa3f.png\";","export default __webpack_public_path__ + \"static/media/card2.5e0f346f.png\";","export default __webpack_public_path__ + \"static/media/card3.a70d2234.png\";","export default __webpack_public_path__ + \"static/media/card4.8367a18c.png\";","export default __webpack_public_path__ + \"static/media/card5.99e5ac71.png\";","export default __webpack_public_path__ + \"static/media/card6.9ee4608b.png\";","export default __webpack_public_path__ + \"static/media/card7.e6e26285.png\";","export default __webpack_public_path__ + \"static/media/card8.6038fe4e.png\";","export default __webpack_public_path__ + \"static/media/card9.971f3140.png\";","export default __webpack_public_path__ + \"static/media/cover.8bc2d6bd.png\";","import styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: grid;\n  height: 100vh;\n  grid-template-rows: auto 1fr;\n  grid-template-columns: 1fr;\n  grid-template-areas:\n    \"header\"\n    \"main\";\n`;\n\nconst Header = styled.div`\n  grid-area: header;\n  background-image: linear-gradient(#1f5d76, #2f9292);\n  color: #ffffff;\n  font-family: \"Staatliches\", cursive;\n  font-size: 50px;\n  padding: 1rem 0;\n  text-align: center;\n`;\n\nconst Main = styled.div`\n  grid-area: main;\n  display: flex;\n  align-items: flex-start;\n  background: #2f9292;\n`;\n\nexport { Container, Header, Main };\n","import React from \"react\";\nimport { Container, Header, Main } from \"./Layout.styles\";\n\nconst Layout = ({ children }) => {\n  return (\n    <Container>\n      <Header>Memory Game</Header>\n      <Main>{children}</Main>\n    </Container>\n  );\n};\n\nexport { Layout };\n","import styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  padding: 1rem 2rem;\n`;\n\nconst Button = styled.button`\n  background: #f18806;\n  box-shadow: 2px 2px 4px #000000;\n  border: none;\n  color: #ffffff;\n  padding: 0.5rem;\n  border-radius: 8px;\n  font-family: \"Roboto\", sans-serif;\n  font-weight: bold;\n  font-size: 14px;\n  cursor: pointer;\n  margin-left: ${(props) => (props.level ? \"1rem\" : \"none\")};\n  margin-bottom: 1rem;\n`;\n\nconst GridCards = styled.div`\n  display: grid;\n  gap: 1rem;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n\n  @media (max-width: 480px) {\n    gap: 0.5rem;\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media (min-width: 481px) and (max-width: 950px) {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n`;\n\nconst Card = styled.div`\n  width: 100%;\n  cursor: pointer;\n`;\n\nconst ImgBack = styled.img`\n  width: 100%;\n  opacity: ${(props) => (props.disableImages ? \"0.8\" : \"initial\")}; ;\n`;\n\nexport { Container, Button, GridCards, Card, ImgBack };\n","import React from \"react\";\nimport { Container, Button, GridCards, Card, ImgBack } from \"./Game.styles\";\nimport backCard from \"../../images/cover.png\";\n\nconst Game = ({\n  disableImages,\n  onStartGame,\n  onChangeLevel,\n  shuffledCards,\n  cardImage,\n  onSelectedCard,\n}) => {\n  return (\n    <Container>\n      <Button onClick={onStartGame}>Reset</Button>\n      <Button level={true} onClick={onChangeLevel}>\n        Change Level\n      </Button>\n      <GridCards>\n        {shuffledCards.map((value, idx) => (\n          <Card key={idx}>\n            {value.front ? (\n              <ImgBack src={cardImage(value.name)} alt=\"card\" />\n            ) : (\n              <ImgBack\n                data-aos=\"flip-left\"\n                disableImages={disableImages}\n                onClick={() => !disableImages && onSelectedCard(idx)}\n                src={backCard}\n                alt=\"card\"\n              />\n            )}\n          </Card>\n        ))}\n      </GridCards>\n    </Container>\n  );\n};\n\nexport { Game };\n","import styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Button = styled.button`\n  background: #ffc123;\n  box-shadow: 2px 2px 4px #000000;\n  border: none;\n  color: #ffffff;\n  max-width: 20%;\n  padding: 1rem;\n  border-radius: 15px;\n  font-family: \"Staatliches\", cursive;\n  font-size: 30px;\n  cursor: pointer;\n\n  @media (max-width: 480px) {\n    max-width: 100%;\n    width: 20rem;\n  }\n`;\n\nconst Title = styled.p`\n  font-family: \"Roboto\", sans-serif;\n  font-size: 30px;\n  color: #023346;\n  font-weight: bold;\n  text-align: center;\n`;\n\nconst ContainerButtons = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ButtonLevel = styled.button`\n  background: #f39d31;\n  box-shadow: 2px 2px 4px #000000;\n  border: none;\n  color: #ffffff;\n  padding: 1rem;\n  border-radius: 100%;\n  font-family: \"Roboto\", sans-serif;\n  font-weight: bold;\n  font-size: 20px;\n  cursor: pointer;\n  margin: 1rem;\n  height: 6rem;\n`;\n\nexport { Container, Button, Title, ContainerButtons, ButtonLevel };\n","import React from \"react\";\nimport {\n  Container,\n  Button,\n  Title,\n  ContainerButtons,\n  ButtonLevel,\n} from \"./Home.styles\";\n\nconst Home = ({ onStartGame, gameOver, setDifficulty, difficulty }) => {\n  return (\n    <Container>\n      {difficulty ? (\n        <>\n          {gameOver && (\n            <Title>Congratulations, you have completed the game!</Title>\n          )}\n          <>\n            <Title>\n              {difficulty === 4\n                ? \"Easy Level\"\n                : difficulty === 6\n                ? \"Medium Level\"\n                : difficulty === 9 && \"Difficult Level\"}\n            </Title>\n            <Button onClick={onStartGame}>\n              {gameOver ? \"let's play again\" : \"Let´s Play\"}\n            </Button>\n          </>\n        </>\n      ) : (\n        <>\n          <Title>Welcome, Select the difficulty!</Title>\n          <ContainerButtons>\n            <ButtonLevel onClick={() => setDifficulty(4)}>Level 1</ButtonLevel>\n            <ButtonLevel onClick={() => setDifficulty(6)}>Level 2</ButtonLevel>\n            <ButtonLevel onClick={() => setDifficulty(9)}>Level 3</ButtonLevel>\n          </ContainerButtons>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport { Home };\n","const cards = [\n  { solved: false, front: false, name: \"card1\" },\n  { solved: false, front: false, name: \"card2\" },\n  { solved: false, front: false, name: \"card3\" },\n  { solved: false, front: false, name: \"card4\" },\n  { solved: false, front: false, name: \"card5\" },\n  { solved: false, front: false, name: \"card6\" },\n  { solved: false, front: false, name: \"card7\" },\n  { solved: false, front: false, name: \"card8\" },\n  { solved: false, front: false, name: \"card9\" },\n];\n\nexport { cards };\n","import React, { useState, useEffect } from \"react\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\n\nimport imageCard1 from \"./images/card1.png\";\nimport imageCard2 from \"./images/card2.png\";\nimport imageCard3 from \"./images/card3.png\";\nimport imageCard4 from \"./images/card4.png\";\nimport imageCard5 from \"./images/card5.png\";\nimport imageCard6 from \"./images/card6.png\";\nimport imageCard7 from \"./images/card7.png\";\nimport imageCard8 from \"./images/card8.png\";\nimport imageCard9 from \"./images/card9.png\";\nimport backCard from \"./images/cover.png\";\n\nimport { Layout } from \"./components/Layout\";\nimport { Game } from \"./components/Game\";\nimport { Home } from \"./components/Home\";\n\nimport { cards } from \"./data/cards\";\n\nfunction App() {\n  const [play, setPlay] = useState(false);\n  const [disableImages, setDisableImages] = useState(false);\n  const [difficulty, setDifficulty] = useState(0);\n  const [shuffledCards, setShuffledCards] = useState([]);\n  const [gameOver, setGameOver] = useState(false);\n  const [selectedCards, setSelectedCards] = useState([]);\n\n  useEffect(() => {\n    AOS.init({\n      duration: 800,\n    });\n    window.addEventListener(\n      \"touchmove\",\n      () => {\n        AOS.refresh();\n      },\n      false\n    );\n  }, [disableImages]);\n\n  useEffect(() => {\n    if (selectedCards.length === 2) {\n      let tempCards = [...shuffledCards];\n      const [firstCard, secondCard] = selectedCards;\n      if (shuffledCards[firstCard].name === shuffledCards[secondCard].name) {\n        tempCards[firstCard].solved = true;\n        tempCards[secondCard].solved = true;\n        setShuffledCards(tempCards);\n        setSelectedCards([]);\n      } else {\n        setDisableImages(true);\n        setTimeout(() => {\n          tempCards[firstCard].front = false;\n          tempCards[secondCard].front = false;\n          setShuffledCards(tempCards);\n          setSelectedCards([]);\n          setDisableImages(false);\n        }, 700);\n      }\n\n      setTimeout(() => {\n        setGameOver(\n          shuffledCards.find((element) => element.solved === false) ===\n            undefined\n            ? true\n            : false\n        );\n      }, 800);\n      setPlay(gameOver ? false : true);\n    }\n  }, [selectedCards]);\n\n  function shufflingCards() {\n    const cardByDifficulty = cards.slice(0, difficulty);\n\n    let tempCards = [...cardByDifficulty, ...cardByDifficulty].map(\n      ({ ...props }) => ({ ...props })\n    );\n\n    setShuffledCards([]);\n    for (var i = tempCards.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      [tempCards[i], tempCards[j]] = [tempCards[j], tempCards[i]];\n    }\n    setShuffledCards(tempCards);\n  }\n\n  const cardImage = (name) => {\n    switch (name) {\n      case \"card1\":\n        return imageCard1;\n      case \"card2\":\n        return imageCard2;\n      case \"card3\":\n        return imageCard3;\n      case \"card4\":\n        return imageCard4;\n      case \"card5\":\n        return imageCard5;\n      case \"card6\":\n        return imageCard6;\n      case \"card7\":\n        return imageCard7;\n      case \"card8\":\n        return imageCard8;\n      case \"card9\":\n        return imageCard9;\n      default:\n        return backCard;\n    }\n  };\n\n  const onStartGame = () => {\n    setPlay(true);\n    setGameOver(false);\n    setSelectedCards([]);\n    shufflingCards();\n  };\n\n  const onSelectedCard = (idx) => {\n    let tempCards = [...shuffledCards];\n    tempCards[idx].front = true;\n    setShuffledCards(tempCards);\n    setSelectedCards((prevValue) => [...prevValue, idx]);\n  };\n\n  const onChangeLevel = () => {\n    setPlay(false);\n    setGameOver(false);\n    setDifficulty(0);\n  };\n\n  return (\n    <Layout>\n      {play && !gameOver ? (\n        <Game\n          disableImages={disableImages}\n          shuffledCards={shuffledCards}\n          cardImage={cardImage}\n          onSelectedCard={onSelectedCard}\n          onStartGame={onStartGame}\n          onChangeLevel={onChangeLevel}\n        />\n      ) : (\n        <Home\n          difficulty={difficulty}\n          gameOver={gameOver}\n          onStartGame={onStartGame}\n          setDifficulty={setDifficulty}\n        />\n      )}\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}